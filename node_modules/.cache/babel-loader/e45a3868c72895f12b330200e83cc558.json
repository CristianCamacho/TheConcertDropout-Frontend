{"ast":null,"code":"var _jsxFileName = \"/Users/tiffanytran/sei-bromeliad/projects/TheConcertDropout/TheConcertDropout-Frontend/the-concert-dropout-app/src/UserPage.js\";\nimport React, { Component } from 'react';\nimport NewPerformer from './NewPerformer';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet baseUrl = 'http://localhost:3003';\n\nclass UserPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getEvents = () => {\n      let performerIds = this.state.performers.map(id => id.id);\n      console.log(this.state.apiUrl + this.state.query + performerIds.join(',') + this.state.apikey);\n      fetch(this.state.apiUrl + this.state.query + performerIds.join(',') + this.state.apikey).then(res => {\n        return res.json();\n      }).then(data => {\n        console.log(data);\n        this.setState({\n          events: data\n        });\n      });\n    };\n\n    this.addPerformer = newPerformer => {\n      const copyPerformers = [...this.state.performers];\n      copyPerformers.push(newPerformer);\n      this.setState({\n        performers: copyPerformers\n      });\n      console.log(\"this.state.performers: \", this.state.performers);\n    };\n\n    this.componentDidMount = () => {};\n\n    this.state = {\n      apiUrl: 'https://api.seatgeek.com/2/events?',\n      apikey: \"&client_id=\" + process.env.REACT_APP_SEATGEEK_API_KEY,\n      sessionSecret: \"&client_secret=\" + process.env.REACT_APP_SECRET_SESSION,\n      query: 'performers.id=',\n      performers: [],\n      searchUrl: ''\n    };\n  } // getUser = () =>{\n  //     fetch(baseUrl + '/users',{\n  //         credentials:\"include\"\n  //     })\n  //     .then(res =>{\n  //         if(res.status === 200){\n  //             return res.json()\n  //         }else{\n  //             return []\n  //         }\n  //     }).then(data => {\n  //         console.log(data)\n  //     })\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Hello \", this.props.username, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-form\",\n        children: [/*#__PURE__*/_jsxDEV(NewPerformer, {\n          baseUrl: baseUrl,\n          apiUrl: this.state.apiUrl,\n          apikey: this.state.apikey,\n          addPerformer: this.addPerformer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your performers:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), this.props.performers.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"user-table table table-hover w-75\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"row row-cols-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \" table-primary col\",\n                children: \"Performer Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \" table-primary col-sm-2\",\n                children: \"Type: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \" table-primary col-sm-2\",\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.props.performers.map((performer, i) => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"table-light col\",\n                  children: performer.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"table-light col\",\n                  children: performer.type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 41\n                }, this)]\n              }, performer.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default UserPage;","map":{"version":3,"sources":["/Users/tiffanytran/sei-bromeliad/projects/TheConcertDropout/TheConcertDropout-Frontend/the-concert-dropout-app/src/UserPage.js"],"names":["React","Component","NewPerformer","baseUrl","UserPage","constructor","props","getEvents","performerIds","state","performers","map","id","console","log","apiUrl","query","join","apikey","fetch","then","res","json","data","setState","events","addPerformer","newPerformer","copyPerformers","push","componentDidMount","process","env","REACT_APP_SEATGEEK_API_KEY","sessionSecret","REACT_APP_SECRET_SESSION","searchUrl","render","username","length","performer","i","name","type"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport NewPerformer from './NewPerformer'\nimport './style.css'\n\nlet baseUrl = 'http://localhost:3003'\n\nclass UserPage extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            apiUrl:'https://api.seatgeek.com/2/events?',\n            apikey: \"&client_id=\" + process.env.REACT_APP_SEATGEEK_API_KEY,\n            sessionSecret: \"&client_secret=\" + process.env.REACT_APP_SECRET_SESSION,\n            query: 'performers.id=',\n            performers: [],\n            searchUrl: '',\n        }\n    }\n\n    // getUser = () =>{\n    //     fetch(baseUrl + '/users',{\n    //         credentials:\"include\"\n    //     })\n    //     .then(res =>{\n    //         if(res.status === 200){\n    //             return res.json()\n    //         }else{\n    //             return []\n    //         }\n    //     }).then(data => {\n    //         console.log(data)\n    //     })\n    // }\n\n    getEvents = () =>{\n        let performerIds = this.state.performers.map(id => id.id)\n        console.log(this.state.apiUrl + this.state.query + performerIds.join(',') + this.state.apikey )\n        fetch(this.state.apiUrl + this.state.query + performerIds.join(',') + this.state.apikey)\n        .then(res => {\n            return res.json()\n        }).then(data =>{\n            console.log(data)\n            this.setState({\n                events: data\n            })\n        })\n    }\n\n    addPerformer = (newPerformer) =>{\n        const copyPerformers = [...this.state.performers]\n        copyPerformers.push(newPerformer)\n        this.setState({\n            performers: copyPerformers\n        })\n        console.log(\"this.state.performers: \", this.state.performers)\n    }\n    componentDidMount = () =>{\n        \n    }\n\n\n\n\n    render(){\n        return(\n            <>\n                <h1>Hello {this.props.username}!</h1>\n                <div className=\"user-form\">\n                    <NewPerformer baseUrl={baseUrl} apiUrl={this.state.apiUrl} apikey={this.state.apikey} addPerformer={this.addPerformer}/>\n                    <h2>Your performers:</h2>\n                    {this.props.performers.length > 0 &&\n                    <table className=\"user-table table table-hover w-75\">\n                        <thead>\n                            <tr className=\"row row-cols-3\">\n                                <th className=\" table-primary col\">Performer Name</th>\n                                <th className=\" table-primary col-sm-2\">Type: </th>\n                                <th className=\" table-primary col-sm-2\"> </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.props.performers.map((performer, i) =>{\n                                return(\n                                    <tr className=\"row\" key={performer.id}>\n                                        <td className=\"table-light col\">{performer.name}</td>\n                                        <td className=\"table-light col\">{performer.type}</td>\n                                        \n                                    </tr>\n                                )\n                            })}\n                        </tbody>\n                    </table>\n                    }\n                </div>\n            </>\n        )\n    }\n}\n\nexport default UserPage"]},"metadata":{},"sourceType":"module"}