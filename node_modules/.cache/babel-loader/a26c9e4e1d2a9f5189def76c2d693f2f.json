{"ast":null,"code":"var _jsxFileName = \"/Users/tiffanytran/sei-bromeliad/projects/TheConcertDropout/TheConcertDropout-Frontend/the-concert-dropout-app/src/EventsPage.js\";\nimport React, { Component } from 'react';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet baseUrl = 'http://localhost:3003'; //returns performer with name Grouplove\n//https://api.seatgeek.com/2/performers/8987?client_id=MjQwNjU4OTB8MTYzNTAwNjg1MC40MTYyMjE&client_secret=30b9c12096416b1b365243c77b8c90a25f14c7d004ff66f1d20531d58f72446a\n//is equal to: https://api.seatgeek.com/2/performers?slug=grouplove&client_id=MjQwNjU4OTB8MTYzNTAwNjg1MC40MTYyMjE\n//returns events by artist id 32 and 9897\n//https://api.seatgeek.com/2/events?performers.id=32,8987&client_id=MjQwNjU4OTB8MTYzNTAwNjg1MC40MTYyMjE&client_secret=30b9c12096416b1b365243c77b8c90a25f14c7d004ff66f1d20531d58f72446a\n//returns events held by performer grouplove\n//https://api.seatgeek.com/2/events?performers.slug=grouplove&client_id=MjQwNjU4OTB8MTYzNTAwNjg1MC40MTYyMjE\n//returns events by smilar to coldplay\n// https://api.seatgeek.com/2/events?q=coldplay&client_id=MjQwNjU4OTB8MTYzNTAwNjg1MC40MTYyMjE\n\nclass EventsPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getUser = () => {\n      fetch(baseUrl + '/users', {\n        credentials: \"include\"\n      }).then(res => {\n        if (res.status === 200) {\n          return res.json();\n        } else {\n          return [];\n        }\n      }).then(data => {\n        console.log(data);\n      });\n    };\n\n    this.getEvents = () => {\n      let performerIds = this.state.performers.map(id => id.id);\n      fetch(this.state.apiUrl + \"performers.id=\" + performerIds.join(',') + this.state.apikey + this.state.sessionSecret).then(res => {\n        return res.json();\n      }).then(data => {\n        console.log(data);\n      });\n    };\n\n    this.componentDidMount = () => {\n      this.getEvents();\n    };\n\n    this.state = {\n      apiUrl: 'https://api.seatgeek.com/2/events?',\n      apikey: \"&client_id=\" + process.env.REACT_APP_SEATGEEK_API_KEY,\n      sessionSecret: \"&client_secret=\" + process.env.SECRET_SESSION,\n      query: 'performers.id=',\n      performers: [],\n      searchUrl: '',\n      performers: [{\n        id: 8987,\n        name: 'Grouplove',\n        type: 'Band'\n      }, {\n        id: 32,\n        name: 'Coldplay',\n        type: 'Band'\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Events page!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default EventsPage;","map":{"version":3,"sources":["/Users/tiffanytran/sei-bromeliad/projects/TheConcertDropout/TheConcertDropout-Frontend/the-concert-dropout-app/src/EventsPage.js"],"names":["React","Component","baseUrl","EventsPage","constructor","props","getUser","fetch","credentials","then","res","status","json","data","console","log","getEvents","performerIds","state","performers","map","id","apiUrl","join","apikey","sessionSecret","componentDidMount","process","env","REACT_APP_SEATGEEK_API_KEY","SECRET_SESSION","query","searchUrl","name","type","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,aAAP;;;AAEA,IAAIC,OAAO,GAAG,uBAAd,C,CAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;;AACA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAC/BG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAwBlBC,OAxBkB,GAwBR,MAAK;AACXC,MAAAA,KAAK,CAACL,OAAO,GAAG,QAAX,EAAoB;AACrBM,QAAAA,WAAW,EAAC;AADS,OAApB,CAAL,CAGCC,IAHD,CAGMC,GAAG,IAAG;AACR,YAAGA,GAAG,CAACC,MAAJ,KAAe,GAAlB,EAAsB;AAClB,iBAAOD,GAAG,CAACE,IAAJ,EAAP;AACH,SAFD,MAEK;AACD,iBAAO,EAAP;AACH;AACJ,OATD,EASGH,IATH,CASQI,IAAI,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,OAXD;AAYH,KArCiB;;AAAA,SAyClBG,SAzCkB,GAyCN,MAAK;AACb,UAAIC,YAAY,GAAG,KAAKC,KAAL,CAAWC,UAAX,CAAsBC,GAAtB,CAA0BC,EAAE,IAAIA,EAAE,CAACA,EAAnC,CAAnB;AAEAd,MAAAA,KAAK,CAAC,KAAKW,KAAL,CAAWI,MAAX,GAAoB,gBAApB,GAAuCL,YAAY,CAACM,IAAb,CAAkB,GAAlB,CAAvC,GAAgE,KAAKL,KAAL,CAAWM,MAA3E,GAAoF,KAAKN,KAAL,CAAWO,aAAhG,CAAL,CACChB,IADD,CACMC,GAAG,IAAI;AACT,eAAOA,GAAG,CAACE,IAAJ,EAAP;AACH,OAHD,EAGGH,IAHH,CAGQI,IAAI,IAAG;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,OALD;AAMH,KAlDiB;;AAAA,SAmDlBa,iBAnDkB,GAmDE,MAAK;AACrB,WAAKV,SAAL;AACH,KArDiB;;AAEd,SAAKE,KAAL,GAAa;AACTI,MAAAA,MAAM,EAAC,oCADE;AAETE,MAAAA,MAAM,EAAE,gBAAgBG,OAAO,CAACC,GAAR,CAAYC,0BAF3B;AAGTJ,MAAAA,aAAa,EAAE,oBAAoBE,OAAO,CAACC,GAAR,CAAYE,cAHtC;AAITC,MAAAA,KAAK,EAAE,gBAJE;AAKTZ,MAAAA,UAAU,EAAE,EALH;AAMTa,MAAAA,SAAS,EAAE,EANF;AAOTb,MAAAA,UAAU,EAAE,CACR;AACIE,QAAAA,EAAE,EAAE,IADR;AAEIY,QAAAA,IAAI,EAAE,WAFV;AAGIC,QAAAA,IAAI,EAAE;AAHV,OADQ,EAMR;AACIb,QAAAA,EAAE,EAAE,EADR;AAEIY,QAAAA,IAAI,EAAE,UAFV;AAGIC,QAAAA,IAAI,EAAE;AAHV,OANQ;AAPH,KAAb;AAoBH;;AAoCDC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAMH;;AAlE8B;;AAqEnC,eAAehC,UAAf","sourcesContent":["import React, {Component} from 'react'\nimport './style.css'\n\nlet baseUrl = 'http://localhost:3003'\n\n//returns performer with name Grouplove\n//https://api.seatgeek.com/2/performers/8987?client_id=MjQwNjU4OTB8MTYzNTAwNjg1MC40MTYyMjE&client_secret=30b9c12096416b1b365243c77b8c90a25f14c7d004ff66f1d20531d58f72446a\n//is equal to: https://api.seatgeek.com/2/performers?slug=grouplove&client_id=MjQwNjU4OTB8MTYzNTAwNjg1MC40MTYyMjE\n\n//returns events by artist id 32 and 9897\n//https://api.seatgeek.com/2/events?performers.id=32,8987&client_id=MjQwNjU4OTB8MTYzNTAwNjg1MC40MTYyMjE&client_secret=30b9c12096416b1b365243c77b8c90a25f14c7d004ff66f1d20531d58f72446a\n\n//returns events held by performer grouplove\n//https://api.seatgeek.com/2/events?performers.slug=grouplove&client_id=MjQwNjU4OTB8MTYzNTAwNjg1MC40MTYyMjE\n\n//returns events by smilar to coldplay\n// https://api.seatgeek.com/2/events?q=coldplay&client_id=MjQwNjU4OTB8MTYzNTAwNjg1MC40MTYyMjE\nclass EventsPage extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            apiUrl:'https://api.seatgeek.com/2/events?',\n            apikey: \"&client_id=\" + process.env.REACT_APP_SEATGEEK_API_KEY,\n            sessionSecret: \"&client_secret=\" + process.env.SECRET_SESSION,\n            query: 'performers.id=',\n            performers: [],\n            searchUrl: '',\n            performers: [\n                {\n                    id: 8987,\n                    name: 'Grouplove',\n                    type: 'Band'\n                },\n                {\n                    id: 32,\n                    name: 'Coldplay',\n                    type: 'Band'\n                },\n            ]\n        }\n    }\n\n    getUser = () =>{\n        fetch(baseUrl + '/users',{\n            credentials:\"include\"\n        })\n        .then(res =>{\n            if(res.status === 200){\n                return res.json()\n            }else{\n                return []\n            }\n        }).then(data => {\n            console.log(data)\n        })\n    }\n\n\n    //https://api.seatgeek.com/2/events?performers.id=32,8987&client_id=MjQwNjU4OTB8MTYzNTAwNjg1MC40MTYyMjE&client_secret=30b9c12096416b1b365243c77b8c90a25f14c7d004ff66f1d20531d58f72446a\n    getEvents = () =>{\n        let performerIds = this.state.performers.map(id => id.id)\n\n        fetch(this.state.apiUrl + \"performers.id=\" + performerIds.join(',') + this.state.apikey + this.state.sessionSecret )\n        .then(res => {\n            return res.json()\n        }).then(data =>{\n            console.log(data)\n        })\n    }\n    componentDidMount = () =>{\n        this.getEvents()\n    }\n\n\n\n\n    render(){\n        return(\n            <>\n                <h1>Events page!</h1>\n\n            </>\n        )\n    }\n}\n\nexport default EventsPage"]},"metadata":{},"sourceType":"module"}