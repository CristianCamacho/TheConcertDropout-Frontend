{"ast":null,"code":"var _jsxFileName = \"/Users/tiffanytran/sei-bromeliad/projects/TheConcertDropout/TheConcertDropout-Frontend/the-concert-dropout-app/src/UserPage.js\";\nimport React, { Component } from 'react';\nimport NewPerformer from './NewPerformer';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet baseUrl = 'http://localhost:3003';\n\nclass UserPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getEvents = () => {\n      let performerIds = this.state.performers.map(id => id.id);\n      console.log(this.state.apiUrl + this.state.query + performerIds.join(',') + this.state.apikey);\n      fetch(this.state.apiUrl + this.state.query + performerIds.join(',') + this.state.apikey).then(res => {\n        return res.json();\n      }).then(data => {\n        console.log(data);\n        this.setState({\n          events: data\n        });\n      });\n    };\n\n    this.addPerformer = newPerformer => {\n      const copyPerformers = [...this.state.performers];\n      copyPerformers.push(newPerformer);\n      this.setState({\n        performers: copyPerformers\n      });\n      console.log(\"this.state.performers: \", this.state.performers);\n    };\n\n    this.componentDidMount = () => {};\n\n    this.state = {\n      apiUrl: 'https://api.seatgeek.com/2/events?',\n      apikey: \"&client_id=\" + process.env.REACT_APP_SEATGEEK_API_KEY,\n      sessionSecret: \"&client_secret=\" + process.env.REACT_APP_SECRET_SESSION,\n      query: 'performers.id=',\n      performers: this.props.performers,\n      searchUrl: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Hello \", this.props.username, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your performers:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), this.state.performers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"table-wrapper-scroll-y my-custom-scrollbar\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"user-table table table-hover w-75\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"row row-cols-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \" table-primary col\",\n                  children: \"Performer Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \" table-primary col\",\n                  children: \"Type: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \" table-primary col\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: this.state.performers.map((performer, i) => {\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: \"row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"table-light col\",\n                    children: performer.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"table-light col\",\n                    children: performer.type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 37\n                  }, this)]\n                }, performer.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 33\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(NewPerformer, {\n          baseUrl: baseUrl,\n          apiUrl: this.state.apiUrl,\n          apikey: this.state.apikey,\n          addPerformer: this.addPerformer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default UserPage;","map":{"version":3,"sources":["/Users/tiffanytran/sei-bromeliad/projects/TheConcertDropout/TheConcertDropout-Frontend/the-concert-dropout-app/src/UserPage.js"],"names":["React","Component","NewPerformer","baseUrl","UserPage","constructor","props","getEvents","performerIds","state","performers","map","id","console","log","apiUrl","query","join","apikey","fetch","then","res","json","data","setState","events","addPerformer","newPerformer","copyPerformers","push","componentDidMount","process","env","REACT_APP_SEATGEEK_API_KEY","sessionSecret","REACT_APP_SECRET_SESSION","searchUrl","render","username","length","performer","i","name","type"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport NewPerformer from './NewPerformer'\nimport './style.css'\n\nlet baseUrl = 'http://localhost:3003'\n\nclass UserPage extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            apiUrl:'https://api.seatgeek.com/2/events?',\n            apikey: \"&client_id=\" + process.env.REACT_APP_SEATGEEK_API_KEY,\n            sessionSecret: \"&client_secret=\" + process.env.REACT_APP_SECRET_SESSION,\n            query: 'performers.id=',\n            performers: this.props.performers,\n            searchUrl: '',\n        }\n    }\n\n    getEvents = () =>{\n        let performerIds = this.state.performers.map(id => id.id)\n        console.log(this.state.apiUrl + this.state.query + performerIds.join(',') + this.state.apikey )\n        fetch(this.state.apiUrl + this.state.query + performerIds.join(',') + this.state.apikey)\n        .then(res => {\n            return res.json()\n        }).then(data =>{\n            console.log(data)\n            this.setState({\n                events: data\n            })\n        })\n    }\n\n    addPerformer = (newPerformer) =>{\n        const copyPerformers = [...this.state.performers]\n        copyPerformers.push(newPerformer)\n        this.setState({\n            performers: copyPerformers\n        })\n        console.log(\"this.state.performers: \", this.state.performers)\n    }\n    componentDidMount = () =>{\n        \n    }\n\n\n\n\n    render(){\n        return(\n            <>\n                <h1>Hello {this.props.username}!</h1>\n                <div className=\"user-form\">\n                <h2>Your performers:</h2>\n                {this.state.performers.length > 0 &&\n                <div class=\"table-wrapper-scroll-y my-custom-scrollbar\">\n                <table className=\"user-table table table-hover w-75\">\n                    <thead>\n                        <tr className=\"row row-cols-3\">\n                            <th className=\" table-primary col\">Performer Name</th>\n                            <th className=\" table-primary col\">Type: </th>\n                            <th className=\" table-primary col\"> </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.performers.map((performer, i) =>{\n                            return(\n                                <tr className=\"row\" key={performer.id}>\n                                    <td className=\"table-light col\">{performer.name}</td>\n                                    <td className=\"table-light col\">{performer.type}</td>\n                                    \n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </table>\n                </div>\n                }\n\n                <NewPerformer baseUrl={baseUrl} apiUrl={this.state.apiUrl} apikey={this.state.apikey} addPerformer={this.addPerformer}/>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default UserPage"]},"metadata":{},"sourceType":"module"}