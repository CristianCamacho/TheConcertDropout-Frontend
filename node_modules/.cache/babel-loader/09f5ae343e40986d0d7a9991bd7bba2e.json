{"ast":null,"code":"var _jsxFileName = \"/Users/tiffanytran/sei-bromeliad/projects/TheConcertDropout/TheConcertDropout-Frontend/the-concert-dropout-app/src/UserPage.js\";\nimport React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport NewPerformer from './NewPerformer';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet baseUrl = 'http://localhost:3003';\n\nclass UserPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getEventsAll = () => {\n      let performerIds = this.state.performers.map(id => id.id); // console.log(this.state.apiUrl + this.state.query + performerIds.join(',') + this.state.apikey )\n\n      fetch(this.state.apiUrl + this.state.query + performerIds.join(',') + this.state.apikey).then(res => {\n        return res.json();\n      }).then(data => {\n        // console.log(data)\n        this.setState({\n          events: data\n        });\n      });\n    };\n\n    this.getPerformers = username => {\n      fetch(baseUrl + \"/users/\" + username, {\n        credentials: \"include\"\n      }).then(res => {\n        if (res.status === 200) {\n          return res.json();\n        } else {\n          return [];\n        }\n      }).then(data => {\n        this.setState({\n          performers: data[0].performers\n        });\n      });\n    };\n\n    this.addPerformer = newPerformer => {\n      console.log(\"here \" + newPerformer);\n      const copyPerformers = [...this.state.performers];\n      copyPerformers.push(newPerformer);\n      this.setState({\n        performers: copyPerformers\n      });\n      console.log(\"this.state.performers: \", this.state.performers);\n    };\n\n    this.deletePerformer = id => {\n      // console.log(performer)\n      fetch(baseUrl + '/users/removeArtist/', {\n        method: 'DELETE',\n        body: JSON.stringify({\n          id: id\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: \"include\"\n      }).then(res => {\n        // console.log(res)\n        // if I checked for a 200 response code\n        const findIndex = this.state.performers.findIndex(performer => performer.id === id);\n        const copyPerformers = [...this.state.performers];\n        copyPerformers.splice(findIndex, 1);\n        this.setState({\n          performers: copyPerformers\n        });\n      });\n    };\n\n    this.routeState = route => {\n      this.setState({\n        redirectPath: route\n      });\n    };\n\n    this.componentDidMount = () => {\n      this.getPerformers(this.props.username);\n    };\n\n    this.state = {\n      apiUrl: 'https://api.seatgeek.com/2/events?',\n      apikey: \"&client_id=\" + process.env.REACT_APP_SEATGEEK_API_KEY,\n      sessionSecret: \"&client_secret=\" + process.env.REACT_APP_SECRET_SESSION,\n      query: 'performers.id=',\n      performers: [],\n      searchUrl: '',\n      redirectPath: ''\n    };\n  }\n\n  render() {\n    const menuClass = `dropdown-menu${this.state.isOpen ? \" show\" : \"\"}`;\n\n    if (this.state.redirectPath) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: this.state.redirectPath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Hello \", this.props.username, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown\",\n          onClick: this.toggleOpen,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary dropdown-toggle\",\n            type: \"button\",\n            id: \"dropdownMenuButton\",\n            \"data-toggle\": \"dropdown\",\n            \"aria-haspopup\": \"true\",\n            children: \"My Account:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: menuClass,\n            \"aria-labelledby\": \"dropdownMenuButton\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dropdown-item\",\n              onClick: () => this.routeState('/user/performers'),\n              children: \"View My Performers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dropdown-item\",\n              onClick: () => this.routeState('/user/events'),\n              children: \"View My Upcoming Events\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-form\",\n          children: [/*#__PURE__*/_jsxDEV(NewPerformer, {\n            baseUrl: baseUrl,\n            apiUrl: this.state.apiUrl,\n            apikey: this.state.apikey,\n            addPerformer: this.addPerformer,\n            currentPerformers: this.state.performers\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Your performers:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, this), this.state.performers.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"user-table table w-75\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"row row-cols-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \" table-primary col\",\n                  children: \"Performer Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \" table-primary col\",\n                  children: \"Type: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \" table-primary col-sm-2\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: this.state.performers.map((performer, i) => {\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: \"row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"table-light col\",\n                    children: performer.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"table-light col\",\n                    children: performer.type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"table-light col-sm-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn-outline-danger rounded\",\n                      onClick: () => this.deletePerformer(performer.id),\n                      children: \"Remove\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 138,\n                      columnNumber: 78\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 41\n                  }, this)]\n                }, performer.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 37\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    }\n  }\n\n}\n\nexport default UserPage;","map":{"version":3,"sources":["/Users/tiffanytran/sei-bromeliad/projects/TheConcertDropout/TheConcertDropout-Frontend/the-concert-dropout-app/src/UserPage.js"],"names":["React","Component","Route","Redirect","NewPerformer","baseUrl","UserPage","constructor","props","getEventsAll","performerIds","state","performers","map","id","fetch","apiUrl","query","join","apikey","then","res","json","data","setState","events","getPerformers","username","credentials","status","addPerformer","newPerformer","console","log","copyPerformers","push","deletePerformer","method","body","JSON","stringify","headers","findIndex","performer","splice","routeState","route","redirectPath","componentDidMount","process","env","REACT_APP_SEATGEEK_API_KEY","sessionSecret","REACT_APP_SECRET_SESSION","searchUrl","render","menuClass","isOpen","toggleOpen","length","i","name","type"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport NewPerformer from './NewPerformer'\nimport './style.css'\n\nlet baseUrl = 'http://localhost:3003'\n\nclass UserPage extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            apiUrl:'https://api.seatgeek.com/2/events?',\n            apikey: \"&client_id=\" + process.env.REACT_APP_SEATGEEK_API_KEY,\n            sessionSecret: \"&client_secret=\" + process.env.REACT_APP_SECRET_SESSION,\n            query: 'performers.id=',\n            performers: [],\n            searchUrl: '',\n            redirectPath: ''\n        }\n    }\n\n    getEventsAll = () =>{\n        let performerIds = this.state.performers.map(id => id.id)\n        // console.log(this.state.apiUrl + this.state.query + performerIds.join(',') + this.state.apikey )\n        fetch(this.state.apiUrl + this.state.query + performerIds.join(',') + this.state.apikey)\n        .then(res => {\n            return res.json()\n        }).then(data =>{\n            // console.log(data)\n            this.setState({\n                events: data\n            })\n        })\n    }\n\n    getPerformers = (username) =>{\n        fetch(baseUrl + \"/users/\" + username,{\n            credentials: \"include\"\n          })\n          .then(res => {\n            if(res.status === 200) {\n              return res.json()\n            } else {\n              return []\n            }\n          }).then(data => {\n            this.setState({ performers: data[0].performers })\n          })\n    }\n\n    addPerformer = (newPerformer) =>{\n        console.log(\"here \" + newPerformer)\n        const copyPerformers = [...this.state.performers]\n        copyPerformers.push(newPerformer)\n        this.setState({\n            performers: copyPerformers\n        })\n        console.log(\"this.state.performers: \", this.state.performers)\n    }\n\n    deletePerformer = (id) => {\n        // console.log(performer)\n        fetch(baseUrl + '/users/removeArtist/', {\n        method: 'DELETE',\n        body:JSON.stringify({id:id}),\n        headers: {\n            'Content-Type': 'application/json'\n          },\n        credentials: \"include\"\n      }).then( res => {\n        // console.log(res)\n        // if I checked for a 200 response code\n        const findIndex = this.state.performers.findIndex(performer => performer.id === id)\n        const copyPerformers = [...this.state.performers]\n        copyPerformers.splice(findIndex, 1)\n        this.setState({\n          performers: copyPerformers\n        })\n      })\n    }\n    routeState = (route) =>{\n        this.setState({\n            redirectPath: route\n        })\n    }\n    componentDidMount = () =>{\n        this.getPerformers(this.props.username)\n    }\n\n\n\n\n    render(){\n        const menuClass = `dropdown-menu${this.state.isOpen ? \" show\" : \"\"}`;\n        if(this.state.redirectPath){\n            return <Redirect to={this.state.redirectPath} />\n        }else {\n        return(\n            <>\n            <h1>Hello {this.props.username}!</h1>\n              <div className=\"dropdown\" onClick={this.toggleOpen}>\n                <button\n                  className=\"btn btn-secondary dropdown-toggle\"\n                  type=\"button\"\n                  id=\"dropdownMenuButton\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                >\n                  My Account:\n                </button>\n                <div className={menuClass} aria-labelledby=\"dropdownMenuButton\">\n                  <button className=\"dropdown-item\"  onClick={() => this.routeState('/user/performers')}>\n                  View My Performers\n                  </button>\n                  <button className=\"dropdown-item\" onClick={() => this.routeState('/user/events')} >\n                  View My Upcoming Events\n                  </button>\n                </div>\n              </div>\n                <div className=\"user-form\">\n                    <NewPerformer baseUrl={baseUrl} apiUrl={this.state.apiUrl} apikey={this.state.apikey} addPerformer={this.addPerformer} currentPerformers={this.state.performers}/>\n                    <h2>Your performers:</h2>\n                    {this.state.performers.length > 0 &&\n                    <table className=\"user-table table w-75\">\n                        <thead>\n                            <tr className=\"row row-cols-3\">\n                                <th className=\" table-primary col\">Performer Name</th>\n                                <th className=\" table-primary col\">Type: </th>\n                                <th className=\" table-primary col-sm-2\"> </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.state.performers.map((performer, i) =>{\n                                return(\n                                    <tr className=\"row\" key={performer.id}>\n                                        <td className=\"table-light col\">{performer.name}</td>\n                                        <td className=\"table-light col\">{performer.type}</td>\n                                        <td className=\"table-light col-sm-2\"><button className=\"btn-outline-danger rounded\" onClick={() =>this.deletePerformer(performer.id)}>Remove</button></td>\n                                        \n                                    </tr>\n                                )\n                            })}\n                        </tbody>\n                    </table>\n                    }\n                </div>\n            </>\n        )}\n    }\n}\n\nexport default UserPage"]},"metadata":{},"sourceType":"module"}