{"ast":null,"code":"var _jsxFileName = \"/Users/tiffanytran/sei-bromeliad/projects/TheConcertDropout/TheConcertDropout-Frontend/the-concert-dropout-app/src/NewPerformer.js\";\nimport React, { Component } from 'react';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class NewForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      // console.log(event.target.value)\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      console.log(this.state.name);\n      this.findPerformer(this.state.name);\n    };\n\n    this.findPerformer = name => {\n      fetch(this.state.performerApiUrl + name + this.props.apikey).then(res => {\n        return res.json();\n      }).then(data => {\n        console.log(\"api fetch performer result: \", data.performers);\n        let performerResult = data.performers.filter(performer => {\n          let skip = false;\n          this.props.currentPerformers.forEach(currentPerformer => {\n            if (currentPerformer.id === performer.id) {\n              skip = true;\n            }\n          });\n\n          if (performer.name.toLowerCase().includes(name.toLowerCase()) && !skip) {\n            return performer;\n          }\n        });\n        console.log(\"api fetch similar performer result: \", performerResult);\n        this.setState({\n          searchResult: performerResult\n        });\n      });\n    };\n\n    this.addPerformerToUser = performer => {\n      console.log(performer);\n      fetch(this.props.baseUrl + '/users/addArtist', {\n        method: 'PUT',\n        body: JSON.stringify({\n          id: performer.id,\n          name: performer.name,\n          type: performer.type\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: \"include\"\n      }).then(res => {\n        return res.json();\n      }).then(data => {\n        console.log(\"added data:\" + data.performers);\n        this.props.addPerformer(data);\n        this.setState({\n          id: '',\n          name: '',\n          type: ''\n        });\n      }).catch(error => console.error({\n        'Error': error\n      }));\n    };\n\n    this.state = {\n      performerApiUrl: 'https://api.seatgeek.com/2/performers?q=',\n      id: '',\n      name: '',\n      type: '',\n      searchResult: []\n    };\n  }\n\n  //for testing\n  //   componentDidMount=()=>{\n  //       this.findPerformer('group')\n  //   }\n  render() {\n    console.log(\"results: \", this.state.searchResult);\n    console.log(\"this.props.currentPerformers: \", this.props.currentPerformers);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          onChange: e => this.handleChange(e),\n          value: this.state.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"btn-info\",\n          type: \"submit\",\n          placeholder: \"Performer's name\",\n          value: \"Search for performer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), this.state.searchResult.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"user-table table table-hover w-75\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"row row-cols-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \" table-primary col\",\n              children: \"Performer Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \" table-primary col\",\n              children: \"Type: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \" table-primary col\",\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.searchResult.map((performer, i) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"table-light col\",\n                children: performer.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"table-light col\",\n                children: performer.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"table-light col\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn-secondary\",\n                  onClick: () => this.addPerformerToUser(performer),\n                  children: \"Add Artist\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 63\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 31\n              }, this)]\n            }, performer.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 27\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/tiffanytran/sei-bromeliad/projects/TheConcertDropout/TheConcertDropout-Frontend/the-concert-dropout-app/src/NewPerformer.js"],"names":["React","Component","NewForm","constructor","props","handleChange","event","setState","name","target","value","handleSubmit","preventDefault","console","log","state","findPerformer","fetch","performerApiUrl","apikey","then","res","json","data","performers","performerResult","filter","performer","skip","currentPerformers","forEach","currentPerformer","id","toLowerCase","includes","searchResult","addPerformerToUser","baseUrl","method","body","JSON","stringify","type","headers","credentials","addPerformer","catch","error","render","e","length","map","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './style.css'\n\nexport default class NewForm extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n        performerApiUrl: 'https://api.seatgeek.com/2/performers?q=',\n        id: '',\n        name: '', \n        type: '', \n        searchResult: []\n    }\n  }\n\n  handleChange = (event) => {\n    // console.log(event.target.value)\n    this.setState({\n      name: event.target.value\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    console.log(this.state.name)\n    this.findPerformer(this.state.name)\n    \n  }\n\n    //searches SeatGeek API for performer similar to user search\n  findPerformer = (name) =>{\n      fetch(this.state.performerApiUrl + name + this.props.apikey)\n        .then(res =>{\n            return res.json()\n        }).then(data => {\n            console.log(\"api fetch performer result: \" , data.performers)\n            let performerResult = data.performers.filter(performer => {\n              let skip = false\n              this.props.currentPerformers.forEach(currentPerformer =>{\n                if(currentPerformer.id === performer.id){\n                  skip = true\n                }\n              })\n              if(performer.name.toLowerCase().includes(name.toLowerCase()) && !skip){\n                return performer\n              }\n            })\n            console.log(\"api fetch similar performer result: \" , performerResult)\n\n            this.setState({\n                searchResult: performerResult\n            }) \n        })\n  }\n\n  addPerformerToUser = (performer) =>{\n    console.log(performer)\n    fetch(this.props.baseUrl + '/users/addArtist', {\n        method: 'PUT',\n        body: JSON.stringify({id: performer.id, name: performer.name, type: performer.type}),\n        headers: {\n          'Content-Type': 'application/json'\n        }, \n        credentials:\"include\",\n    }).then( res => {\n        return res.json()\n    }).then( data => {\n      console.log(\"added data:\" + data.performers)\n      this.props.addPerformer(data)\n      this.setState({\n        id: '',\n        name: '', \n        type: ''\n      })\n    }).catch (error => console.error({'Error': error}))\n  }\n\n  //for testing\n//   componentDidMount=()=>{\n//       this.findPerformer('group')\n//   }\n\n\n  render() {\n      console.log(\"results: \", this.state.searchResult)\n      console.log(\"this.props.currentPerformers: \", this.props.currentPerformers)\n    return (\n        <>\n          <form onSubmit={this.handleSubmit}>\n              <label htmlFor=\"name\">Name: </label>\n              <input type=\"text\" id=\"name\" name=\"name\" onChange={ (e) => this.handleChange(e)} value={this.state.name} />\n              <input className=\"btn-info\" type=\"submit\" placeholder=\"Performer's name\" value=\"Search for performer\" />\n          </form>\n\n          {this.state.searchResult.length > 0 &&\n          <table className=\"user-table table table-hover w-75\">\n              <thead>\n                  <tr className=\"row row-cols-3\">\n                      <th className=\" table-primary col\">Performer Name</th>\n                      <th className=\" table-primary col\">Type: </th>\n                      <th className=\" table-primary col\"> </th>\n                  </tr>\n              </thead>\n              <tbody>\n                  {this.state.searchResult.map((performer, i) =>{\n                      return(\n                          <tr className=\"row\" key={performer.id}>\n                              <td className=\"table-light col\">{performer.name}</td>\n                              <td className=\"table-light col\">{performer.type}</td>\n                              <td className=\"table-light col\"><button className=\"btn-secondary\" onClick={() =>this.addPerformerToUser(performer)}>Add Artist</button></td>\n                          </tr>\n                      )\n                  })}\n              </tbody>\n          </table>\n          }\n      </>\n    )\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}