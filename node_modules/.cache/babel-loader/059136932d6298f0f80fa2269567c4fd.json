{"ast":null,"code":"var _jsxFileName = \"/Users/tiffanytran/sei-bromeliad/projects/TheConcertDropout/TheConcertDropout-Frontend/the-concert-dropout-app/src/UserPage.js\";\nimport React, { Component } from 'react';\nimport NewPerformer from './NewPerformer';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet baseUrl = 'http://localhost:3003';\n\nclass UserPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getUser = () => {\n      fetch(baseUrl + '/users', {\n        credentials: \"include\"\n      }).then(res => {\n        if (res.status === 200) {\n          return res.json();\n        } else {\n          return [];\n        }\n      }).then(data => {\n        console.log(data);\n      });\n    };\n\n    this.getEvents = () => {\n      let performerIds = this.state.performers.map(id => id.id);\n      console.log(this.state.apiUrl + this.state.query + performerIds.join(',') + this.state.apikey);\n      fetch(this.state.apiUrl + this.state.query + performerIds.join(',') + this.state.apikey).then(res => {\n        return res.json();\n      }).then(data => {\n        console.log(data);\n        this.setState({\n          events: data\n        });\n      });\n    };\n\n    this.addPerformer = newPerformer => {\n      const copyPerformers = [...this.state.performers];\n      copyPerformers.push(newPerformer);\n      this.setState({\n        performers: copyPerformers\n      });\n    };\n\n    this.componentDidMount = () => {\n      this.getEvents();\n    };\n\n    this.state = {\n      apiUrl: 'https://api.seatgeek.com/2/events?',\n      apikey: \"&client_id=\" + process.env.REACT_APP_SEATGEEK_API_KEY,\n      sessionSecret: \"&client_secret=\" + process.env.REACT_APP_SECRET_SESSION,\n      query: 'performers.id=',\n      performers: [],\n      searchUrl: '',\n      userId: this.props.id,\n      performers: this.props.performers\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hello!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NewPerformer, {\n        baseUrl: baseUrl,\n        apiUrl: this.state.apiUrl,\n        apikey: this.state.apikey,\n        addPerformer: this.addPerformer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default UserPage;","map":{"version":3,"sources":["/Users/tiffanytran/sei-bromeliad/projects/TheConcertDropout/TheConcertDropout-Frontend/the-concert-dropout-app/src/UserPage.js"],"names":["React","Component","NewPerformer","baseUrl","UserPage","constructor","props","getUser","fetch","credentials","then","res","status","json","data","console","log","getEvents","performerIds","state","performers","map","id","apiUrl","query","join","apikey","setState","events","addPerformer","newPerformer","copyPerformers","push","componentDidMount","process","env","REACT_APP_SEATGEEK_API_KEY","sessionSecret","REACT_APP_SECRET_SESSION","searchUrl","userId","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport NewPerformer from './NewPerformer'\nimport './style.css'\n\nlet baseUrl = 'http://localhost:3003'\n\nclass UserPage extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            apiUrl:'https://api.seatgeek.com/2/events?',\n            apikey: \"&client_id=\" + process.env.REACT_APP_SEATGEEK_API_KEY,\n            sessionSecret: \"&client_secret=\" + process.env.REACT_APP_SECRET_SESSION,\n            query: 'performers.id=',\n            performers: [],\n            searchUrl: '',\n            userId: this.props.id,\n            performers: this.props.performers\n        }\n    }\n\n    getUser = () =>{\n        fetch(baseUrl + '/users',{\n            credentials:\"include\"\n        })\n        .then(res =>{\n            if(res.status === 200){\n                return res.json()\n            }else{\n                return []\n            }\n        }).then(data => {\n            console.log(data)\n        })\n    }\n\n    getEvents = () =>{\n        let performerIds = this.state.performers.map(id => id.id)\n        console.log(this.state.apiUrl + this.state.query + performerIds.join(',') + this.state.apikey )\n        fetch(this.state.apiUrl + this.state.query + performerIds.join(',') + this.state.apikey)\n        .then(res => {\n            return res.json()\n        }).then(data =>{\n            console.log(data)\n            this.setState({\n                events: data\n            })\n        })\n    }\n\n    addPerformer = (newPerformer) =>{\n        const copyPerformers = [...this.state.performers]\n        copyPerformers.push(newPerformer)\n        this.setState({\n            performers: copyPerformers\n        })\n    }\n    componentDidMount = () =>{\n        this.getEvents()\n    }\n\n\n\n\n    render(){\n        return(\n            <>\n                <h1>Hello!</h1>\n                <NewPerformer baseUrl={baseUrl} apiUrl={this.state.apiUrl} apikey={this.state.apikey} addPerformer={this.addPerformer}/>\n\n            </>\n        )\n    }\n}\n\nexport default UserPage"]},"metadata":{},"sourceType":"module"}